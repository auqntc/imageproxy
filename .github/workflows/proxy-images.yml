name: Proxy Docker Images

permissions:
  packages: write
  contents: read

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

jobs:
  proxy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Load image config
        id: load_config
        run: |
          echo "::set-output name=images::$(yq '.images | @json' images.yml)"
        shell: bash

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull, tag, and push images
        run: |
          images='${{ steps.load_config.outputs.images }}'
          echo "$images" | jq -c '.[]' | while read image; do
            src=$(echo "$image" | jq -r '.source')
            tgt=$(echo "$image" | jq -r '.target')
            tag="${src##*:}"

            if [ "$tag" != "latest" ]; then
              if docker manifest inspect "$tgt" > /dev/null 2>&1; then
                echo "$tgt exists – skipping."
              else
                docker pull "$src"
                docker tag "$src" "$tgt"
                docker push "$tgt"
              fi
            else
              docker pull "$src"
              src_digest=$(docker inspect --format='{{index .RepoDigests 0}}' "$src" | cut -d@ -f2)
              tgt_digest=$(docker manifest inspect "$tgt" 2>/dev/null | jq -r '.manifests[0].digest // empty')
              if [ "$src_digest" = "$tgt_digest" ]; then
                echo "$tgt is up to date – skipping."
              else
                docker tag "$src" "$tgt"
                docker push "$tgt"
              fi
            fi
          done
        shell: bash
